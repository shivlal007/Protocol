`timescale 1ns / 1ps

module TB_I2C_S();

 reg clk;
 
 reg scl;
 reg rst;
 reg newd_s;
 //reg ack;
 wire wr;
 wire [7:0] r_data;
 wire [6:0] r_addr; /////8-bit  7-bit : addr 1-bit : mode
   
 reg sda_i;
 wire sda_t;
 wire sda_o;
 
 
 wire [7:0] rdata;
 wire done;
 
 reg [7:0] addressToSend 	= 8'b10001011;  //LSB is rw bin and rest 7 is address
 reg [7:0] dataToSend 	= 8'b10001011;
 reg sclt;
 integer j = 0,k = 0;
 
 I2C_S2 DUT(.scl(scl),
 .rst(rst),
 .newd_s(newd_s),
 .wr(wr),
 .r_data(r_data),
 .r_addr(r_addr), /////8-bit  7-bit : addr 1-bit : mode
 .sda_i(sda_i),
 .sda_t(sda_t),
 .sda_o(sda_o),
 .rdata(rdata),
 .done(done)
  );

initial begin
//sda_t = 1'b1;
     rst = 1;
    #50 rst = 0; 
    #20 newd_s = 1;
end

 initial begin
		clk = 0;
		//scl = clk;
    	forever begin
			#10 clk =  ~clk;
          	scl = sclt ? 1'b1 : clk;
		end		
 end
	
initial begin
   #90 sclt = 1; sda_i = 1;
   //#20 sclt = 1; sda_i = 0;
   #20 sclt = 0; sda_i = 0;
   for(j=0; j<8; j=j+1)
        begin
            #20 sclt = 0;
   	        sda_i = addressToSend[j];
        end
   #20 sclt = 0; //sda_t = 0;
   for(k=0; k<8; k=k+1)
        begin
            #20 sclt = 0;//sda_t = 1;
   	        sda_i = dataToSend[k];
        end
   #20 sclt = 0; //sda_t = 0;
   #20 sclt = 1; sda_i = 0;//sda_t = 1;
   #20 sclt = 0; sda_i = 1;
   #20 sclt = 0; 
         
end
endmodule
